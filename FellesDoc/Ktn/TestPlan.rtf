{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\froman\fcharset0 Times-Roman;}{\f1\fswiss\fcharset0 ArialMT;}{\f2\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\lang20\f0\fs24\par
\f1\fs38 Testing strategy\f0\fs24\par
\f1\fs30 The tests in this plan is laid out in an incremental fashion. First tests will be performed for all features (connection, tear down, send and receive) without errors enabled to ensure that everything works in an trivial environment. Then each error will be added one by one. After two errors have been tested individually those two are tested in combination, when three errors have been tested all three errors will be tested together. And so on until all errors is accounted fore. \f0\fs24\par
\par
\f1\fs38 Error probability\f0\fs24\par
\f1\fs30 Each test case, containing errors, will be run twice at 10% and 50% error rate in conjunction with the specifications (ref: Kompendium for Fellesprosjektet chap. 6.3.1)\f0\fs24\par
\par
\f1\fs38 Test repetition\f0\fs24\par
\f1\fs30 All test containing the sending and reception of an actual payload will dispatch 10 distinct payloads, in order to evaluate the received payloads precisely.\fs38\page\f0\fs24\par
\par
\f1\fs38 Initial connection (no errors enabled) - T-KTN01\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i connect()\i0  and \i accept()\i0  must be implemented in A1 (\i ConnectionImpl\i0 ). The errors variable in \i settings.xml \i0 should be \i false\i0 .\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\par
\f1\fs26 NA\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Setup a connection between two hosts running the same implementation of A1. \f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 This is done by creating a ConnectionImpl object on both the server and the client side. First the server executes the \i accept()\i0  method with port X, then the client executes the method \i connect()\i0  with the server IP and port X.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 A three-way handshake should be observed. This can be verified on the client side by the \i connect() \i0 method\i  \i0 returning without throwing a \i SocketTimeoutException\i0 .\i  \i0 On the server side the test is passed if the accept method returns a \i Connection\i0  as opposed to throwing a \i SocketTimeoutException\i0 .\f0\fs24\par
\par
\f1\fs30\tab\tab\page\f0\fs24\par
\f1\fs38 Connection and tear down (no errors enabled) - T-KTN02\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The \i close()\i0  method must be implemented in A1 (\i ConnectionImpl\i0 ). The \i errors\i0  variable in \i settings.xml \i0 should be \i false\i0 .\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\par
\f1\fs26 T-KTN01\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Close a connection between two hosts running the same implementation of A1. \f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 This is done by first creating a connection as described in T-KTN01. After the connection is established either the client or the server calls the \i close()\i0 . This should be tested in two separate runs.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 A four-way handshake should be observed. The caller of the \i close() \i0 method\i  \i0 can verify a successful test if method returns without an exception.\page\f0\fs24\par
\par
\f1\fs38 Send and receive (no errors enabled) T-KTN03\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented in A1 (\i ConnectionImpl\i0 ) The \i errors\i0  variable in \i settings.xml \i0 should be \i false\i0 .\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\par
\f1\fs26 T-KTN02\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Send a packet between two hosts running the same implementation of A1. \f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\par
\f1\fs26 The packages sent by the client host should be received by the server host. This test should be considered a success if the sending client can call \i send()\i0 , and the receiving client can call \i receive()\i0  without either client throwing a \i ConnectionException\i0  or an \i IOException\i0 . And all the 10 Strings returned by the \i receive()\i0  function should be equal to the String arguments to the \i send()\i0  function.\fs30\page\f0\fs24\par
\f1\fs38 With loss error - T-KTN04\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i loss\i0  variable in the \i settings.xml\i0  should be set to first 10% errors and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs26\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system can handle packet loss. \f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The method \i send()\i0  should be called on the client side and \i receive()\i0  in a loop on the server side. The send method should be applied 10 times with distinct String arguments. Once the packages has been received by the second host, the connection should close by the client, as described in T-KTN02. \f0\fs24\par
\f1\fs30\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. Regardless of packet loss error rate(Unless it\rquote s 100%, in which case there should be thrown a SocketTimeoutException on the clients \i connect()\i0  call), the receiving client should receive all packets sent by the sender client. I.E. all the 10 distinct String should be equal. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \fs30\page\f0\fs24\par
\f1\fs38 Test with delay - T-KTN05\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i delay\i0  variable in the \i settings.xml\i0  should be set to first 10% errors and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system handles packet delay.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if all 10 messages are received by the server in the order the client sends them. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\f1\fs38 With loss error and delay - T-KTN06\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i loss and delay\i0  variables in the \i settings.xml\i0  should be set to first 10% errors, and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs26\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system can handle packet loss and delay at the same time. \f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The method \i send()\i0  should be called on the client side and \i receive()\i0  in a loop on the server side. The send method should be applied 10 times with distinct String arguments with sequence numbers. Once the packages has been received by the second host, the connection should close by the client, as described in T-KTN02. \f0\fs24\par
\f1\fs30\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if 10 messages are received by the server in the order the client sends them. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \fs30\page\f0\fs24\par
\f1\fs38 Test with ghost - T-KTN07\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i ghost\i0  variable in the \i settings.xml\i0  should be set to first 10% errors, and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system can handle ghost packages.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if only the 10 messages sent by the client is received by the server. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\f1\fs38 With loss error, delay and ghost - T-KTN08\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i loss, delay and ghost\i0  variables in the \i settings.xml\i0  should be set to first 10% errors and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs26\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system can handle packet loss, delay and ghost packages at the same time.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The method \i send()\i0  should be called on the client side and \i receive()\i0  in a loop on the server side. The send method should be applied 10 times with distinct String arguments with sequence numbers. Once the packages has been received by the second host, the connection should close by the client, as described in T-KTN02. \f0\fs24\par
\f1\fs30\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if only 10 messages are received by the server in the order the client sends them. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\f1\fs38 Test payload bit errors - T-KTN09\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The Send() and Receive() methods should be implemented and working, the program should first be tested for 10%, and then 50% payload bit errors. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system handles payload bit errors.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if all the 10 messages sent by the client is received by the server and content is equal. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\f1\fs38 With loss error, delay, ghost and payload bit errors - T-KTN10\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i loss, delay, ghost and payload\i0  variables in the \i settings.xml\i0  should be set to first 10% errors and then 50%. The \i errors\i0  variable should be true and \i header\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN07, T-KTN09\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs26\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system can handle packet loss, delay, payload bit errors and ghost packages at the same time.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The method \i send()\i0  should be called on the client side and \i receive()\i0  in a loop on the server side. The send method should be applied 10 times with distinct String arguments. Once the packages has been received by the second host, the connection should close by the client, as described in T-KTN02. \f0\fs24\par
\f1\fs30\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if only 10 messages are received by the server in the order the client sends them and the content of the messages is equal. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\f1\fs38 Test with header bit errors - T-KTN11\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and the \i header\i0  variable in the \i settings.xml\i0  should be set to first 10% errors and then 50%. The \i errors\i0  variable should be true and all other \i numeric\i0  variables must be 0%\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN03\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system handles header bit errors.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. The test should be considered a success if all the 10 messages sent by the client is received by the server and content is equal. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 . \page\f0\fs24\par
\par
\f1\fs38 Test with all errors enabled - T-KTN12\f0\fs24\par
\par
\f1\fs32 Preconditions\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Methods \i send()\i0  and \i receive()\i0  must be implemented and working, and all numeric variables in the \i settings.xml\i0  should be set to first 10% errors and then 50%.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Dependencies\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 T-KTN10, T-KTN11\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Objective\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs26 Test if the system is robust enough to handle all errors enabled at the same time.\f0\fs24\par
\par
\f1\fs32 How to test\f0\fs24\par
\par
\f1\fs26 A connection must be established as in T-KTN01. The server calls \i receive() \i0 in a loop in order to handle multiple messages. The client calls \i send() \i0 10 times with distinct payloads containing a sequence number. When the test is executed the client calls \i close() \i0 as described in T-KTN02 to end the session.\f0\fs24\par
\f1\fs30\tab\tab\tab\f0\fs24\par
\f1\fs32 Expected Result\f0\fs24\par
\f1\fs30\tab\f0\fs24\par
\pard\sa200\sl276\slmult1\f1\fs26 The \i connect()\i0  and \i accept() \i0 must first return without exceptions. This test should be considered successful if the receiving side receives only 10 messages with the exact content and order the sending side sends. Additionally, all \i send()\i0  and \i receive()\i0  calls must return without throwing either a \i ConnectionException\i0  or an \i IOException\i0 .\f2\fs22\par
}
 